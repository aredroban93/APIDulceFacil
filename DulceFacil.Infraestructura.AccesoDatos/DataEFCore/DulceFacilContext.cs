// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace DulceFacil.Infraestructura.AccesoDatos;

public partial class DulceFacilContext : DbContext
{
    public DulceFacilContext()
    {
    }

    public DulceFacilContext(DbContextOptions<DulceFacilContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Asignacion_Pedido_Ruta> Asignacion_Pedido_Ruta { get; set; }

    public virtual DbSet<Categorias_Cliente> Categorias_Cliente { get; set; }

    public virtual DbSet<Clientes> Clientes { get; set; }

    public virtual DbSet<Conductores> Conductores { get; set; }

    public virtual DbSet<Detalle_Pedido> Detalle_Pedido { get; set; }

    public virtual DbSet<Itinerarios> Itinerarios { get; set; }

    public virtual DbSet<Pedidos> Pedidos { get; set; }

    public virtual DbSet<Productos> Productos { get; set; }

    public virtual DbSet<Roles> Roles { get; set; }

    public virtual DbSet<Rutas> Rutas { get; set; }

    public virtual DbSet<Usuarios> Usuarios { get; set; }

    public virtual DbSet<Zonas_Reparto> Zonas_Reparto { get; set; }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see https://go.microsoft.com/fwlink/?LinkId=723263.
        => optionsBuilder.UseSqlServer("Data Source=DESKTOP-JQFQPO3\\SQLEXPRESS;Initial Catalog=DulceFacil;Integrated Security=True");

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Asignacion_Pedido_Ruta>(entity =>
        {
            entity.HasKey(e => e.asignacion_id).HasName("PK__Asignaci__2A4899ABE1637127");

            entity.HasIndex(e => new { e.pedido_id, e.ruta_id }, "IDX_Asig_Pedido_Ruta");

            entity.Property(e => e.fecha_asignacion).HasDefaultValueSql("(sysutcdatetime())");

            entity.HasOne(d => d.pedido).WithMany(p => p.Asignacion_Pedido_Ruta)
                .HasForeignKey(d => d.pedido_id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Asignacion_Pedido");

            entity.HasOne(d => d.ruta).WithMany(p => p.Asignacion_Pedido_Ruta)
                .HasForeignKey(d => d.ruta_id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Asignacion_Ruta");
        });

        modelBuilder.Entity<Categorias_Cliente>(entity =>
        {
            entity.HasKey(e => e.categoria_id).HasName("PK__Categori__DB875A4FF85677B0");

            entity.Property(e => e.descripcion).HasMaxLength(200);
            entity.Property(e => e.nombre)
                .IsRequired()
                .HasMaxLength(50);
        });

        modelBuilder.Entity<Clientes>(entity =>
        {
            entity.HasKey(e => e.cliente_id).HasName("PK__Clientes__47E34D64BD7D8F5C");

            entity.HasIndex(e => e.categoria_id, "IDX_Clientes_Categoria");

            entity.Property(e => e.direccion).HasMaxLength(200);
            entity.Property(e => e.email).HasMaxLength(100);
            entity.Property(e => e.latitud).HasColumnType("decimal(9, 6)");
            entity.Property(e => e.longitud).HasColumnType("decimal(9, 6)");
            entity.Property(e => e.nombre)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.telefono).HasMaxLength(20);

            entity.HasOne(d => d.categoria).WithMany(p => p.Clientes)
                .HasForeignKey(d => d.categoria_id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Clientes_Categorias");
        });

        modelBuilder.Entity<Conductores>(entity =>
        {
            entity.HasKey(e => e.conductor_id).HasName("PK__Conducto__A16B14C80D50DF41");

            entity.Property(e => e.licencia)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.telefono).HasMaxLength(20);

            entity.HasOne(d => d.usuario).WithMany(p => p.Conductores)
                .HasForeignKey(d => d.usuario_id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Conductores_Usuarios");
        });

        modelBuilder.Entity<Detalle_Pedido>(entity =>
        {
            entity.HasKey(e => e.detalle_id).HasName("PK__Detalle___91B12E7005C4630A");

            entity.HasIndex(e => e.pedido_id, "IDX_DetallePedido_Pedido");

            entity.Property(e => e.precio_unitario).HasColumnType("decimal(18, 2)");

            entity.HasOne(d => d.pedido).WithMany(p => p.Detalle_Pedido)
                .HasForeignKey(d => d.pedido_id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_DetallePedido_Pedido");

            entity.HasOne(d => d.producto).WithMany(p => p.Detalle_Pedido)
                .HasForeignKey(d => d.producto_id)
                .HasConstraintName("FK_DetallePedido_Producto");
        });

        modelBuilder.Entity<Itinerarios>(entity =>
        {
            entity.HasKey(e => e.itinerario_id).HasName("PK__Itinerar__05B5F7CB38520AA4");

            entity.HasIndex(e => e.conductor_id, "IDX_Itinerarios_Conductor");

            entity.HasIndex(e => e.ruta_id, "IDX_Itinerarios_Ruta");

            entity.HasOne(d => d.conductor).WithMany(p => p.Itinerarios)
                .HasForeignKey(d => d.conductor_id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Itinerarios_Conductores");

            entity.HasOne(d => d.ruta).WithMany(p => p.Itinerarios)
                .HasForeignKey(d => d.ruta_id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Itinerarios_Rutas");
        });

        modelBuilder.Entity<Pedidos>(entity =>
        {
            entity.HasKey(e => e.pedido_id).HasName("PK__Pedidos__CBE76076C16B591D");

            entity.HasIndex(e => e.cliente_id, "IDX_Pedidos_Cliente");

            entity.Property(e => e.estado)
                .IsRequired()
                .HasMaxLength(50);

            entity.HasOne(d => d.cliente).WithMany(p => p.Pedidos)
                .HasForeignKey(d => d.cliente_id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Pedidos_Clientes");
        });

        modelBuilder.Entity<Productos>(entity =>
        {
            entity.HasKey(e => e.producto_id).HasName("PK__Producto__FB5CEEECA8E7EFBA");

            entity.Property(e => e.descripcion).HasMaxLength(200);
            entity.Property(e => e.nombre)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.precio_unitario).HasColumnType("decimal(18, 2)");
        });

        modelBuilder.Entity<Roles>(entity =>
        {
            entity.HasKey(e => e.rol_id).HasName("PK__Roles__CF32E44394ECEE7C");

            entity.Property(e => e.descripcion).HasMaxLength(200);
            entity.Property(e => e.nombre)
                .IsRequired()
                .HasMaxLength(50);
        });

        modelBuilder.Entity<Rutas>(entity =>
        {
            entity.HasKey(e => e.ruta_id).HasName("PK__Rutas__CEA08A121FE72207");

            entity.HasIndex(e => e.zona_id, "IDX_Rutas_Zona");

            entity.Property(e => e.fecha_creacion).HasDefaultValueSql("(sysutcdatetime())");
            entity.Property(e => e.nombre)
                .IsRequired()
                .HasMaxLength(100);

            entity.HasOne(d => d.zona).WithMany(p => p.Rutas)
                .HasForeignKey(d => d.zona_id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Rutas_Zonas");
        });

        modelBuilder.Entity<Usuarios>(entity =>
        {
            entity.HasKey(e => e.usuario_id).HasName("PK__Usuarios__2ED7D2AFA5CD04BF");

            entity.HasIndex(e => e.email, "IDX_Usuarios_Email");

            entity.HasIndex(e => e.email, "UQ__Usuarios__AB6E616464CC266B").IsUnique();

            entity.Property(e => e.contrasena)
                .IsRequired()
                .HasMaxLength(255);
            entity.Property(e => e.email)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.nombre)
                .IsRequired()
                .HasMaxLength(100);

            entity.HasOne(d => d.rol).WithMany(p => p.Usuarios)
                .HasForeignKey(d => d.rol_id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Usuarios_Roles");
        });

        modelBuilder.Entity<Zonas_Reparto>(entity =>
        {
            entity.HasKey(e => e.zona_id).HasName("PK__Zonas_Re__93DCFB5F1A51363E");

            entity.Property(e => e.nombre)
                .IsRequired()
                .HasMaxLength(100);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}